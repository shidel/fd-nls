Simple Game Development Asset Image Editor

usage: IMGEDIT.EXE [options]


    [filename]      Specify file to edit. If none is specified, NONAME.IMG will
                    be assumed. If the file does not exist, a new image of
                    16x16 will be created.

    /size X:Y       Set new image or font size.

General notes for editing images.

    ImgEdit is not a paint program, picture editor or other similar type of
photo editing program. It is designed specifically towards pixel editing small
images to be used by graphical programs and games in DOS. It came into being
because I needed some graphics to use in a game and no other free and open
source program suited my needs. Maybe someday I'll add support for larger
images and other things to make it more useful as a general picture editor.

    When using ImgEdit, the UI has some unique and interesting behaviour. In
part, this is becaused it's running on top of a custom game engine. You are
probably used to having the left and right mouse button do different things.
Of course while drawing in ImgEdit, the left mouse button draws and right
button erases. But, the UI ups that another notch. Many of the other elements
behave a little different when the right button is used. For example, items
like "Rotate" in the menu rotate left with one button and right with the other.

    The concept of left/right mouse buttons extends to the keyboard controls
as well. Using "Rotate" again as an example, (Left Alt)+R and (Right Alt)+R
rotate in opposite directions. Then (Left Shift)+Arrow and (Right Shift)+Arrow
will shift the image the same direction using a different fill color.

    I could list the actions which have similar but distinct behaviour when
using a left or right key modifier (Shift, Cntrl, etc.). But, ImgEdit is still
evolving and it is not that difficult to figure out. Just play around in the UI,
you'll figure it out. :-)

    One more thing... Only very limited support for non-native graphics file
formats (such as BMP). While other programs should be able to read the files
created by ImgEdit, files created elsewhere probably won't be readable by
ImgEdit. When it comes to BMP support, this is primarily for three reasons. It
only supports BMP specification 3 (for Windows 3.1). It only supports 256 color
BMPs. It does not support more than one color plane.

